pipeline {
  agent any 

  tools {
    // Nombre dado a la instalaci√≥n de Maven en "Global Tool configuration"
    maven "maven 3.3.3" 
  }

  stages {
    stage('Git fetch') { 
      steps {
        // Get some code from a GitHub repository
        git 'https://github.com/icb163/ejercicio3examen.git'
      }
    }
    stage('Compile, Test, Package') { 
      steps {
        // When necessary, use '-f path-to/pom.xml' to give the path to pom.xml
        // Run goal 'package'. It includes compile, test and package.
        sh "mvn -f pom.xml clean package" 
      }
      post { 
        // Record the test results and archive the jar file.
        success {
          junit '**/target/surefire-reports/TEST-*.xml'
          archiveArtifacts '**/target/*.jar'
          
          jacoco(     
              execPattern: '**/target/jacoco.exec',
              classPattern: '**/target/classes',
              sourcePattern: '**/src/',
              exclusionPattern: '**/test/'
              )
          
          publishCoverage adapters: [jacocoAdapter('**/target/site/jacoco/jacoco.xml')]
        }
      }
    }
    stage ('Analysis') {
        steps {
            // Warnings next generation plugin required
            sh "mvn -f pom.xml findbugs:findbugs checkstyle:checkstyle pmd:pmd pmd:cpd -DgenerateReports=false"
        }
     post {
       success {
         recordIssues enabledForFailure: true, tool: checkStyle()
         recordIssues enabledForFailure: true, tool: pmdParser()
         recordIssues enabledForFailure: true, tool: cpd()
         recordIssues enabledForFailure: true, tool: findBugs()
         recordIssues enabledForFailure: true, tool: spotBugs()
        }
     }
    }
  }
}
