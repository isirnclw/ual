package ual.hmis.ejercicio2;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.htmlunit.HtmlUnitDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class SelectionTest {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@Before
	public void setUp() {
		// System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe");

		FirefoxOptions firefoxOptions = new FirefoxOptions();
		firefoxOptions.setHeadless(true);
		driver = new FirefoxDriver(firefoxOptions);
		
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	@Test
	public void selection() {
		driver.get("http://34.74.249.242:8080/");
		driver.manage().window().setSize(new Dimension(2000, 2000));
		driver.findElement(By.cssSelector(".form-control")).click();
		driver.findElement(By.cssSelector(".form-control")).sendKeys("uno");
		driver.findElement(By.cssSelector(".btn")).click();
		{
			WebElement element = driver.findElement(By.cssSelector(".btn"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		assertFalse(driver.findElement(By.cssSelector(".far")).isSelected());
		driver.findElement(By.cssSelector(".form-control")).click();
		driver.findElement(By.cssSelector(".form-control")).sendKeys("dos");
		driver.findElement(By.cssSelector(".btn-success")).click();
		{
			WebElement element = driver.findElement(By.cssSelector(".btn-success"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		assertFalse(driver.findElement(By.cssSelector(".item:nth-child(3) .far")).isSelected());
		driver.findElement(By.cssSelector(".form-control")).click();
		driver.findElement(By.cssSelector(".form-control")).sendKeys("tres");
		driver.findElement(By.cssSelector(".btn-success")).click();
		assertFalse(driver.findElement(By.cssSelector(".item:nth-child(4) .far")).isSelected());
		driver.findElement(By.cssSelector(".item:nth-child(4) .name")).click();
		driver.findElement(By.cssSelector(".item:nth-child(4) .name")).click();
		driver.findElement(By.cssSelector(".item:nth-child(4) .far")).click();
		driver.findElement(By.cssSelector(".item:nth-child(3) .far")).click();
		driver.findElement(By.cssSelector(".fa-square")).click();
		assertTrue(driver.findElement(By.cssSelector(".item:nth-child(4) .far")).isSelected());
		assertTrue(driver.findElement(By.cssSelector(".item:nth-child(3) .far")).isSelected());
		assertTrue(driver.findElement(By.cssSelector(".item:nth-child(2) .far")).isSelected());
		driver.findElement(By.cssSelector(".item:nth-child(4) .remove > .btn")).click();
		driver.findElement(By.cssSelector(".item:nth-child(3) .fa")).click();
		driver.findElement(By.cssSelector(".fa")).click();
		driver.close();
	}
}
